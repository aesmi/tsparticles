(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./EditorInputBase"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EditorCheckboxInput = void 0;
    const EditorInputBase_1 = require("./EditorInputBase");
    class EditorCheckboxInput extends EditorInputBase_1.EditorInputBase {
        constructor(data, id, name, value, autoMap = true) {
            super(data, () => document.createElement("input"), id, name, () => false, (value) => value, (self) => {
                const input = self.element;
                return input.checked;
            }, (self, value) => {
                const input = self.element;
                input.checked = value;
            }, value, autoMap);
            const input = this.element;
            input.type = "checkbox";
            input.addEventListener("change", () => {
                this.changeEventHandler();
            });
            this.fullDom = document.createElement("div");
            this.fullDom.append(this.element);
            const spacer = document.createElement("div");
            spacer.classList.add("editor-spacer");
            this.fullDom.append(spacer);
        }
        addItem() {
            return this;
        }
        addItemGroup() {
            return this;
        }
        addItems() {
            return this;
        }
        max() {
            return this;
        }
        min() {
            return this;
        }
        step() {
            return this;
        }
    }
    exports.EditorCheckboxInput = EditorCheckboxInput;
});
