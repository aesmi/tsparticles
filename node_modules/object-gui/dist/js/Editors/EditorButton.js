(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./EditorItem"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EditorButton = void 0;
    const EditorItem_1 = require("./EditorItem");
    class EditorButton extends EditorItem_1.EditorItem {
        constructor(data, id, name, label, autoMap = true) {
            super(data, () => document.createElement("button"));
            this.id = id;
            this.name = name;
            this.label = label;
            this.autoMap = autoMap;
            this.element.id = `button_${this.id}`;
            this.element.innerText = this.label;
            this.element.addEventListener("click", () => {
                if (this.autoMap) {
                    const obj = this.data;
                    const func = obj[this.name];
                    if (typeof func === "function") {
                        func.bind(obj)();
                    }
                }
                if (this.clickHandler) {
                    this.clickHandler();
                }
            });
        }
        click(clickHandler) {
            this.clickHandler = clickHandler;
            return this;
        }
    }
    exports.EditorButton = EditorButton;
});
